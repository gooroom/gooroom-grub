From 2cc4f7b7933a17f9ac267949a067fec1d2272ca0 Mon Sep 17 00:00:00 2001
From: Dave Park <parkparkqw@gmail.com>
Date: Thu, 30 Jun 2022 12:16:00 +0900
Subject: [PATCH 8/8] Remove shim verifier filter so that grub can run without
 shim when secure boot enabled

---
 grub-core/kern/efi/init.c         |  5 +++--
 grub-core/kern/efi/sb.c           | 18 +++++++++++-------
 grub-core/loader/i386/efi/linux.c |  5 +++--
 3 files changed, 17 insertions(+), 11 deletions(-)

diff --git a/grub-core/kern/efi/init.c b/grub-core/kern/efi/init.c
index 7facacf09..9917125e6 100644
--- a/grub-core/kern/efi/init.c
+++ b/grub-core/kern/efi/init.c
@@ -102,7 +102,8 @@ grub_efi_init (void)
   if (grub_efi_get_secureboot () == GRUB_EFI_SECUREBOOT_MODE_ENABLED)
     {
       grub_lockdown ();
-      grub_shim_lock_verifier_setup ();
+      // gooroom grub
+      // grub_shim_lock_verifier_setup ();
     }
 
   efi_call_4 (grub_efi_system_table->boot_services->set_watchdog_timer,
@@ -111,7 +112,7 @@ grub_efi_init (void)
   grub_efidisk_init ();
 }
 
-void (*grub_efi_net_config) (grub_efi_handle_t hnd, 
+void (*grub_efi_net_config) (grub_efi_handle_t hnd,
 			     char **device,
 			     char **path);
 
diff --git a/grub-core/kern/efi/sb.c b/grub-core/kern/efi/sb.c
index 89c4bb3fd..9f9abef86 100644
--- a/grub-core/kern/efi/sb.c
+++ b/grub-core/kern/efi/sb.c
@@ -43,11 +43,13 @@ grub_efi_get_secureboot (void)
 {
   static grub_efi_guid_t efi_variable_guid = GRUB_EFI_GLOBAL_VARIABLE_GUID;
   grub_efi_status_t status;
-  grub_efi_uint32_t attr = 0;
+  // gooroom grub
+  // grub_efi_uint32_t attr = 0;
   grub_size_t size = 0;
   grub_uint8_t *secboot = NULL;
   grub_uint8_t *setupmode = NULL;
-  grub_uint8_t *moksbstate = NULL;
+  // gooroom grub
+  // grub_uint8_t *moksbstate = NULL;
   grub_uint8_t secureboot = GRUB_EFI_SECUREBOOT_MODE_UNKNOWN;
   const char *secureboot_str = "UNKNOWN";
 
@@ -80,11 +82,12 @@ grub_efi_get_secureboot (void)
    * variable doesn't have the runtime attribute set, we might as well
    * honor that.
    */
-  status = grub_efi_get_variable_with_attributes ("MokSBState", &shim_lock_guid,
+// gooroom grub
+/*  status = grub_efi_get_variable_with_attributes ("MokSBState", &shim_lock_guid,
 						  &size, (void **) &moksbstate, &attr);
-
+*/
   /* If it fails, we don't care why. Default to secure. */
-  if (status != GRUB_EFI_SUCCESS)
+/*  if (status != GRUB_EFI_SUCCESS)
     {
       secureboot = GRUB_EFI_SECUREBOOT_MODE_ENABLED;
       goto out;
@@ -95,11 +98,12 @@ grub_efi_get_secureboot (void)
       secureboot = GRUB_EFI_SECUREBOOT_MODE_DISABLED;
       goto out;
     }
-
+*/
   secureboot = GRUB_EFI_SECUREBOOT_MODE_ENABLED;
 
  out:
-  grub_free (moksbstate);
+  // gooroom grub
+  // grub_free (moksbstate);
   grub_free (setupmode);
   grub_free (secboot);
 
diff --git a/grub-core/loader/i386/efi/linux.c b/grub-core/loader/i386/efi/linux.c
index c730825ae..42e96e5f2 100644
--- a/grub-core/loader/i386/efi/linux.c
+++ b/grub-core/loader/i386/efi/linux.c
@@ -52,7 +52,8 @@ struct grub_efi_shim_lock
   grub_efi_status_t (*verify) (void *buffer, grub_uint32_t size);
 };
 typedef struct grub_efi_shim_lock grub_efi_shim_lock_t;
-
+// gooroom grub
+/*
 static grub_efi_boolean_t
 grub_linuxefi_secure_validate (void *data, grub_uint32_t size)
 {
@@ -87,7 +88,7 @@ grub_linuxefi_secure_validate (void *data, grub_uint32_t size)
 		(unsigned long) status);
   return 0;
 }
-
+*/
 typedef void(*handover_func)(void *, grub_efi_system_table_t *, struct linux_kernel_params *);
 
 static grub_err_t
-- 
2.30.2

